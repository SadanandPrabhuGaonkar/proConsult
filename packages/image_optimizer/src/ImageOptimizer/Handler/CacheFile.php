<?php

namespace A3020\ImageOptimizer\Handler;

use A3020\ImageOptimizer\Entity\ProcessedFile;

class CacheFile extends BaseHandler
{
    /**
     * Optimizes a cache file, generally generated by the legacy thumbnail helper.
     *
     * @param array $body
     *
     * @return ProcessedFile|null
     */
    public function process($body)
    {
        // E.g. /application/files/cache/thumbnails/e0f8faf12d61248c38cba1efedbfc3c8.png
        // E.g. /vegan/cache/thumbnails/e0f8faf12d61248c38cba1efedbfc3c8.png
        $relativePath = $body['path'];

        $processedFile = $this->processedFilesRepository->findOrCreateCacheFile($relativePath);
        if ($processedFile->isProcessed()) {
             $this->logger->error('File is already processed' . $body['path']);

            return null;
        }

        $this->logger->debug('Relative path: ' . $relativePath);
        $this->logger->debug('Absolute path: ' . DIR_BASE . $relativePath);

        $processedFile->setAbsolutePath(DIR_BASE . $relativePath);
        $processedFile->setProperties();

        $this->logger->debug('File size before: ' . $processedFile->getFileSizeOriginal());

        $this->checker($processedFile);
        $this->optimize($processedFile);
        $this->save($processedFile);

        $this->logger->debug('File size after: ' . $processedFile->getFileSizeNew());

        return $processedFile;
    }

    private function optimize(ProcessedFile $processedFile)
    {
        if ($processedFile->getSkipReason()) {
            $this->logger->debug('Skip reason code: ' . $processedFile->getSkipReason());

            return;
        }

        $this->optimizerChain->optimize($processedFile->getAbsolutePath());

        // The md5 hash of the cache files also uses the modification date...
        // Therefore we have to restore the make date/time.
        touch($processedFile->getAbsolutePath(), $processedFile->getMakeTimeOriginalFile());

        $processedFile->setFileSizeReduction(
            $this->calculateReduction($processedFile)
        );
    }
}
